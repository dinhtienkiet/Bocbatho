// <auto-generated />
using System;
using FINANCE.INFRA.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FINANCE.INFRA.Migrations
{
    [DbContext(typeof(FINANCEEntities))]
    [Migration("20190801081441_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FINANCE.CORE.Models.Borrower", b =>
                {
                    b.Property<int>("BorrowerID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTime>("DoB");

                    b.Property<string>("IdCardNumber")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.HasKey("BorrowerID");

                    b.ToTable("Borrower");
                });

            modelBuilder.Entity("FINANCE.CORE.Models.ContributionContract", b =>
                {
                    b.Property<int>("ContractID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("ContractSignDate");

                    b.Property<int>("ContributorID");

                    b.Property<DateTime>("ExpireDate");

                    b.Property<int>("InterestCycle");

                    b.Property<decimal>("InterestRate");

                    b.Property<decimal>("NotReceivedInterest");

                    b.Property<string>("Note")
                        .IsRequired();

                    b.Property<int>("Status");

                    b.Property<decimal>("ThisTermInterest");

                    b.HasKey("ContractID");

                    b.HasIndex("ContributorID");

                    b.ToTable("ContributionContract");
                });

            modelBuilder.Entity("FINANCE.CORE.Models.ContributionTransactionHistory", b =>
                {
                    b.Property<int>("ContractID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("ContractSignDate");

                    b.Property<int>("ContributionContractID");

                    b.Property<string>("Note")
                        .IsRequired();

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<int>("UserID");

                    b.HasKey("ContractID");

                    b.HasIndex("ContributionContractID");

                    b.HasIndex("UserID");

                    b.ToTable("ContributionTransactionHistory");
                });

            modelBuilder.Entity("FINANCE.CORE.Models.Contributor", b =>
                {
                    b.Property<int>("ContributorID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BankNumber");

                    b.Property<DateTime>("DoB");

                    b.Property<int>("IdCardNumber");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("PhoneNumber");

                    b.HasKey("ContributorID");

                    b.ToTable("Contributor");
                });

            modelBuilder.Entity("FINANCE.CORE.Models.InstallmentLoanContract", b =>
                {
                    b.Property<int>("ContractID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<int>("BorrowerID");

                    b.Property<DateTime>("ContractSignDate");

                    b.Property<decimal>("DailyInterest");

                    b.Property<int>("InterestCycle");

                    b.Property<decimal>("InterestRate");

                    b.Property<decimal>("Paid");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<DateTime>("Term")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 8, 1, 15, 14, 41, 631, DateTimeKind.Local).AddTicks(7937));

                    b.Property<decimal>("Unpaid");

                    b.HasKey("ContractID");

                    b.HasIndex("BorrowerID");

                    b.ToTable("InstallmentLoanContract");
                });

            modelBuilder.Entity("FINANCE.CORE.Models.InstallmentLoanTransactionHistory", b =>
                {
                    b.Property<int>("ContractID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("ContractSignDate");

                    b.Property<int>("InstallmentLoanContractID");

                    b.Property<string>("Note")
                        .IsRequired();

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<int>("UserID");

                    b.HasKey("ContractID");

                    b.HasIndex("InstallmentLoanContractID");

                    b.HasIndex("UserID");

                    b.ToTable("InstallmentLoanTransactionHistory");
                });

            modelBuilder.Entity("FINANCE.CORE.Models.LoanContract", b =>
                {
                    b.Property<int>("ContractID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<int>("BorrowerID");

                    b.Property<DateTime>("ContractSignDate");

                    b.Property<DateTime>("ExpireDate");

                    b.Property<decimal>("InterestInDebt");

                    b.Property<decimal>("InterestPayDate");

                    b.Property<decimal>("InterestRate");

                    b.Property<int>("LoanPackage")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.HasKey("ContractID");

                    b.HasIndex("BorrowerID");

                    b.ToTable("LoanContract");
                });

            modelBuilder.Entity("FINANCE.CORE.Models.LoanTransactionHistory", b =>
                {
                    b.Property<int>("ContractID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("ContractSignDate");

                    b.Property<int>("LoanContractID");

                    b.Property<string>("Note")
                        .IsRequired();

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<int>("UserID");

                    b.HasKey("ContractID");

                    b.HasIndex("LoanContractID");

                    b.HasIndex("UserID");

                    b.ToTable("LoanTransactionHistory");
                });

            modelBuilder.Entity("FINANCE.CORE.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Avatar");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FINANCE.CORE.Models.ContributionContract", b =>
                {
                    b.HasOne("FINANCE.CORE.Models.Contributor", "Contributors")
                        .WithMany("ContributionContracts")
                        .HasForeignKey("ContributorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FINANCE.CORE.Models.ContributionTransactionHistory", b =>
                {
                    b.HasOne("FINANCE.CORE.Models.ContributionContract", "ContributionContract")
                        .WithMany("ContributionTransactionHistories")
                        .HasForeignKey("ContributionContractID")
                        .HasConstraintName("FK_ContributionTransactionHistory_ContributionContract");

                    b.HasOne("FINANCE.CORE.Models.User", "User")
                        .WithMany("ContributionTransactionHistories")
                        .HasForeignKey("UserID")
                        .HasConstraintName("FK_ContributionTransactionHistory_User");
                });

            modelBuilder.Entity("FINANCE.CORE.Models.InstallmentLoanContract", b =>
                {
                    b.HasOne("FINANCE.CORE.Models.Borrower", "Borrower")
                        .WithMany("InstallmentLoanContract")
                        .HasForeignKey("BorrowerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FINANCE.CORE.Models.InstallmentLoanTransactionHistory", b =>
                {
                    b.HasOne("FINANCE.CORE.Models.InstallmentLoanContract", "InstallmentLoanContract")
                        .WithMany("InstallmentLoanTransactionHistories")
                        .HasForeignKey("InstallmentLoanContractID")
                        .HasConstraintName("FK_InstallmentLoanTransactionHistory_InstallmentLoanContract");

                    b.HasOne("FINANCE.CORE.Models.User", "User")
                        .WithMany("InstallmentLoanTransactionHistories")
                        .HasForeignKey("UserID")
                        .HasConstraintName("FK_InstallmentLoanTransactionHistory_User");
                });

            modelBuilder.Entity("FINANCE.CORE.Models.LoanContract", b =>
                {
                    b.HasOne("FINANCE.CORE.Models.Borrower", "Borrower")
                        .WithMany("LoanContract")
                        .HasForeignKey("BorrowerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FINANCE.CORE.Models.LoanTransactionHistory", b =>
                {
                    b.HasOne("FINANCE.CORE.Models.LoanContract", "LoanContract")
                        .WithMany("LoanTransactionHistories")
                        .HasForeignKey("LoanContractID")
                        .HasConstraintName("FK_LoanTransactionHistory_LoanContract");

                    b.HasOne("FINANCE.CORE.Models.User", "User")
                        .WithMany("LoanTransactionHistories")
                        .HasForeignKey("UserID")
                        .HasConstraintName("FK_LoanTransactionHistory_User");
                });
#pragma warning restore 612, 618
        }
    }
}
